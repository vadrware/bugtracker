CREATE TABLE "CORE_USERPROFILE" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "USERID_ID" NUMBER(11) NOT NULL UNIQUE REFERENCES "AUTH_USER" ("ID") DEFERRABLE INITIALLY DEFERRED,
    "ACTIVE" NUMBER(1) CHECK ("ACTIVE" IN (0,1)) NULL
)
;

            DECLARE
                i INTEGER;
            BEGIN
                SELECT COUNT(*) INTO i FROM USER_CATALOG
                    WHERE TABLE_NAME = 'CORE_USERPROFILE_SQ' AND TABLE_TYPE = 'SEQUENCE';
                IF i = 0 THEN
                    EXECUTE IMMEDIATE 'CREATE SEQUENCE CORE_USERPROFILE_SQ';
                END IF;
            END;
            /

            CREATE OR REPLACE TRIGGER CORE_USERPROFILE_TR
            BEFORE INSERT ON "CORE_USERPROFILE"
            FOR EACH ROW
            WHEN (new."ID" IS NULL)
                BEGIN
                    SELECT CORE_USERPROFILE_SQ.nextval
                    INTO :new."ID" FROM dual;
                END;
                /
CREATE TABLE "CORE_PRODUCT" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "NAME" NVARCHAR2(100) NULL,
    "DESCRIPTION" NCLOB NULL
)
;

            DECLARE
                i INTEGER;
            BEGIN
                SELECT COUNT(*) INTO i FROM USER_CATALOG
                    WHERE TABLE_NAME = 'CORE_PRODUCT_SQ' AND TABLE_TYPE = 'SEQUENCE';
                IF i = 0 THEN
                    EXECUTE IMMEDIATE 'CREATE SEQUENCE CORE_PRODUCT_SQ';
                END IF;
            END;
            /

            CREATE OR REPLACE TRIGGER CORE_PRODUCT_TR
            BEFORE INSERT ON "CORE_PRODUCT"
            FOR EACH ROW
            WHEN (new."ID" IS NULL)
                BEGIN
                    SELECT CORE_PRODUCT_SQ.nextval
                    INTO :new."ID" FROM dual;
                END;
                /
CREATE TABLE "CORE_PRODUCTVERSION" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "VERSION" NVARCHAR2(30) NULL,
    "DESCRIPTION" NCLOB NULL
)
;

            DECLARE
                i INTEGER;
            BEGIN
                SELECT COUNT(*) INTO i FROM USER_CATALOG
                    WHERE TABLE_NAME = 'CORE_PRODUCTVERSION_SQ' AND TABLE_TYPE = 'SEQUENCE';
                IF i = 0 THEN
                    EXECUTE IMMEDIATE 'CREATE SEQUENCE CORE_PRODUCTVERSION_SQ';
                END IF;
            END;
            /

            CREATE OR REPLACE TRIGGER CORE_PRODUCTVERSION_TR
            BEFORE INSERT ON "CORE_PRODUCTVERSION"
            FOR EACH ROW
            WHEN (new."ID" IS NULL)
                BEGIN
                    SELECT CORE_PRODUCTVERSION_SQ.nextval
                    INTO :new."ID" FROM dual;
                END;
                /
CREATE TABLE "CORE_RESOLUTION" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "NAME" NVARCHAR2(30) NULL
)
;

            DECLARE
                i INTEGER;
            BEGIN
                SELECT COUNT(*) INTO i FROM USER_CATALOG
                    WHERE TABLE_NAME = 'CORE_RESOLUTION_SQ' AND TABLE_TYPE = 'SEQUENCE';
                IF i = 0 THEN
                    EXECUTE IMMEDIATE 'CREATE SEQUENCE CORE_RESOLUTION_SQ';
                END IF;
            END;
            /

            CREATE OR REPLACE TRIGGER CORE_RESOLUTION_TR
            BEFORE INSERT ON "CORE_RESOLUTION"
            FOR EACH ROW
            WHEN (new."ID" IS NULL)
                BEGIN
                    SELECT CORE_RESOLUTION_SQ.nextval
                    INTO :new."ID" FROM dual;
                END;
                /
CREATE TABLE "CORE_DEFECT" (
    "ID" NUMBER(11) NOT NULL PRIMARY KEY,
    "PRODUCTID_ID" NUMBER(11) NOT NULL REFERENCES "CORE_PRODUCT" ("ID") DEFERRABLE INITIALLY DEFERRED,
    "PROJECTVERSION_ID" NUMBER(11) NOT NULL REFERENCES "CORE_PRODUCTVERSION" ("ID") DEFERRABLE INITIALLY DEFERRED,
    "POSTDATE" TIMESTAMP NOT NULL,
    "MODDATE" TIMESTAMP NOT NULL,
    "DEFECTSTATE" NVARCHAR2(1) NULL,
    "DESCRIPTION" NCLOB NULL,
    "REPRODUCE" NCLOB NULL,
    "RESOLUTIONID_ID" NUMBER(11) NOT NULL REFERENCES "CORE_RESOLUTION" ("ID") DEFERRABLE INITIALLY DEFERRED,
    "USERID_ID" NUMBER(11) NOT NULL REFERENCES "AUTH_USER" ("ID") DEFERRABLE INITIALLY DEFERRED,
    "MODIFIEDUSERID_ID" NUMBER(11) NOT NULL REFERENCES "AUTH_USER" ("ID") DEFERRABLE INITIALLY DEFERRED,
    "ASSIGNEDQA_ID" NUMBER(11) NOT NULL REFERENCES "AUTH_USER" ("ID") DEFERRABLE INITIALLY DEFERRED,
    "ASSIGNEDDEV_ID" NUMBER(11) NOT NULL REFERENCES "AUTH_USER" ("ID") DEFERRABLE INITIALLY DEFERRED,
    "ASSIGNEDMGR_ID" NUMBER(11) NOT NULL REFERENCES "AUTH_USER" ("ID") DEFERRABLE INITIALLY DEFERRED
)
;

            DECLARE
                i INTEGER;
            BEGIN
                SELECT COUNT(*) INTO i FROM USER_CATALOG
                    WHERE TABLE_NAME = 'CORE_DEFECT_SQ' AND TABLE_TYPE = 'SEQUENCE';
                IF i = 0 THEN
                    EXECUTE IMMEDIATE 'CREATE SEQUENCE CORE_DEFECT_SQ';
                END IF;
            END;
            /

            CREATE OR REPLACE TRIGGER CORE_DEFECT_TR
            BEFORE INSERT ON "CORE_DEFECT"
            FOR EACH ROW
            WHEN (new."ID" IS NULL)
                BEGIN
                    SELECT CORE_DEFECT_SQ.nextval
                    INTO :new."ID" FROM dual;
                END;
                /
COMMIT;
